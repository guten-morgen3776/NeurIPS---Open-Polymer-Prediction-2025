1️⃣ 分子記述子 (RDKitなど)
特徴: 分子の物理化学的・トポロジカルな性質を数値化
例: 分子量、LogP（水溶解度の指標）、環の数、回転結合数
強み: 解釈可能で計算が速い
向き: LGBMやXGBoostのような 勾配ブースティング系 に強い
2️⃣ 分子フィンガープリント (ECFP, MACCSなど)
特徴: 部分構造の「存在／非存在」をビット列で表す
例:
Morgan FP (ECFP4) → 最も定番
MACCS keys → 固定パターンベース
強み: 計算が非常に軽い・類似度計算にも強い
向き: k-NN, ランダムフォレスト, SVMなど
3️⃣ SMILESベースのトランスフォーマー (ChemBERTa, MolBERT)
特徴: SMILESを「言語」として処理 → BERTみたいに事前学習モデルを利用
強み: ドメイン知識を手動で入れなくても特徴を学習できる
向き: 深層学習パイプライン、特に大規模データがある場合
4️⃣ グラフベース (GNN)
特徴: 原子＝ノード、結合＝エッジのグラフ表現
例: GCN, GAT, GIN, D-MPNN
強み: 分子構造そのものを表現できる。最新の化学系論文でも主流
向き: 分子プロパティ予測の最先端手法
5️⃣ SMILESトークン化＋埋め込み (Word2Vec, TF-IDF)
特徴: SMILESを「文字列」として分割し、自然言語処理的にベクトル化
強み: 導入が簡単。化学知識不要
向き: LSTMや小規模Transformerに組み込める
📌 まとめると：
手軽さ & 解釈性重視 → 1・2
スコア狙いでDLを回すなら → 3・4
シンプルにNLP処理で試したい → 5
👉 実務的には、最初は RDKit記述子 + Morgan FP を作って LightGBM に食わせてみて、
そこから余力があれば ChemBERTa or GNN を組み込む、という流れが多いです。
